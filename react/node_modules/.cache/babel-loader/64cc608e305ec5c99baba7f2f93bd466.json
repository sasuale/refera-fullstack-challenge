{"ast":null,"code":"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nfunction Category() {\n  //\n  const [loading, setLoading] = useState(true);\n  const [category, setCategory] = useState([]); //\n\n  useEffect(() => {\n    let isMountered = true;\n    axios.get('api/list-category').then(res => {\n      if (isMountered) {\n        if (res.data.status === 200) {\n          //\n          console.log(res.data.categories);\n          setCategory(res.data.categories);\n          setLoading(false);\n        }\n      }\n    });\n    return () => {\n      isMountered = false;\n    };\n  });\n}\n\nexport default Category;","map":{"version":3,"sources":["/media/malanta/03A81F3046E08AF8/Help/frontend/src/components/frontend/Category.js"],"names":["React","useEffect","useState","axios","Link","Category","loading","setLoading","category","setCategory","isMountered","get","then","res","data","status","console","log","categories"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;;AAEA,SAASC,QAAT,GAAoB;AAClB;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC,CAHkB,CAKlB;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIS,WAAW,GAAG,IAAlB;AAEAP,IAAAA,KAAK,CAACQ,GAAN,CAAU,mBAAV,EAA+BC,IAA/B,CAAoCC,GAAG,IAAI;AACvC,UAAGH,WAAH,EACA;AACI,YAAGG,GAAG,CAACC,IAAJ,CAASC,MAAT,KAAoB,GAAvB,EACA;AACI;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACC,IAAJ,CAASI,UAArB;AACAT,UAAAA,WAAW,CAACI,GAAG,CAACC,IAAJ,CAASI,UAAV,CAAX;AACAX,UAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ;AACJ,KAXD;AAaA,WAAO,MAAM;AACTG,MAAAA,WAAW,GAAG,KAAd;AACH,KAFD;AAGH,GAnBQ,CAAT;AAsBD;;AAED,eAAeL,QAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\n\nfunction Category() {\n  //\n  const [loading, setLoading] = useState(true);\n  const [category, setCategory] = useState([]);\n\n  //\n  useEffect(() => {\n      let isMountered = true;\n\n      axios.get('api/list-category').then(res => {\n          if(isMountered)\n          {\n              if(res.data.status === 200)\n              {\n                  //\n                  console.log(res.data.categories);\n                  setCategory(res.data.categories);\n                  setLoading(false);\n              }\n          }\n      });\n\n      return () => {\n          isMountered = false;\n      }\n  });\n\n  \n}\n\nexport default Category;"]},"metadata":{},"sourceType":"module"}